{"version":3,"sources":["components/Header.jsx","components/IForm.jsx","components/EachNote.jsx","components/ExpandedNote.jsx","components/Notes.jsx","components/Content.jsx","components/Footer.jsx","components/App.jsx","index.js"],"names":["Header","className","IForm","props","setNotes","expandform","setExpandForm","useState","titleInput","noteInput","formInput","setFormInput","updateInput","event","value","target","name","prevState","expandTheForm","Collapse","in","autoFocus","autoComplete","onChange","type","placeholder","Form","Control","as","rows","onClick","plaintext","Zoom","preventDefault","EachNote","viewNote","e","param","recId","id","splice","console","log","stopPropagation","setExpandNote","noteTitle","noteContent","handleShow","split","map","item","i","key","ExpandedNote","show","handleClose","expandNote","str","String","Modal","onHide","closeButton","Title","Body","Notes","notes","setShow","counter","note","Content","Footer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e024c39e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Notes</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport CropOriginalIcon from \"@material-ui/icons/CropOriginal\";\r\n// import ImgUpload from \"./ImgUpload\";\r\n\r\nfunction IForm(props) {\r\n  const { setNotes, expandform, setExpandForm } = props;\r\n  const [formInput, setFormInput] = useState({\r\n    titleInput: \"\",\r\n    noteInput: \"\"\r\n  });\r\n  // const [show, setShow] = useState(false);\r\n  // const handleClose = () => setShow(false);\r\n  // const handleShow = e => {\r\n  //   e.preventDefault();\r\n  //   setShow(true);\r\n  // };\r\n\r\n  function updateInput(event) {\r\n    if (!expandform) {\r\n      expandTheForm(true);\r\n    } else {\r\n      const value = event.target.value;\r\n      const name = event.target.name;\r\n      setFormInput(prevState => {\r\n        return { ...prevState, [name]: value };\r\n      });\r\n    }\r\n  }\r\n\r\n  function addNote(event) {\r\n    if (formInput.noteInput && formInput.titleInput) {\r\n      setNotes(prevState => {\r\n        return prevState ? [...prevState, formInput] : [formInput];\r\n      });\r\n      setFormInput({\r\n        titleInput: \"\",\r\n        noteInput: \"\"\r\n      });\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  function expandTheForm() {\r\n    setExpandForm(true);\r\n  }\r\n\r\n  return (\r\n    <form className=\"form\">\r\n      {/* <ImgUpload show={show} handleClose={handleClose} /> */}\r\n      {expandform && (\r\n        <Collapse in={true}>\r\n          <input\r\n            autoFocus={expandform && true}\r\n            autoComplete=\"off\"\r\n            onChange={updateInput}\r\n            className=\"titleInput\"\r\n            name=\"titleInput\"\r\n            type=\"text\"\r\n            placeholder=\"Title\"\r\n            value={formInput.titleInput}\r\n          />\r\n        </Collapse>\r\n      )}\r\n\r\n      <Form.Control\r\n        as=\"textarea\"\r\n        rows={expandform ? \"4\" : \"1\"}\r\n        onClick={expandTheForm}\r\n        className=\"textfield noteInput\"\r\n        plaintext\r\n        placeholder=\"Take a note\"\r\n        name=\"noteInput\"\r\n        value={formInput.noteInput}\r\n        autoFocus={true}\r\n        onChange={updateInput}\r\n        autoComplete=\"off\"\r\n      />\r\n      {/* {expandform && (\r\n        <Zoom in={true}>\r\n          <button onClick={handleShow} className=\"addButton galleryButton\">\r\n            <CropOriginalIcon />\r\n          </button>\r\n        </Zoom>\r\n      )} */}\r\n      {expandform && (\r\n        <Zoom in={true}>\r\n          <button type=\"submit\" onClick={addNote} className=\"addButton\">\r\n            <AddIcon />\r\n          </button>\r\n        </Zoom>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default IForm;\r\n","import React from \"react\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nfunction EachNote(props) {\r\n  function viewNote(e, param, recId) {\r\n    if (param === \"delete\") {\r\n      const id = recId - 1;\r\n      props.setNotes(prevState => {\r\n        prevState.splice(id, 1);\r\n        return [...prevState];\r\n      });\r\n      console.log(\"delete\");\r\n      e.stopPropagation();\r\n    } else {\r\n      props.setExpandNote({\r\n        noteTitle: props.noteTitle,\r\n        noteContent: props.noteContent\r\n      });\r\n      props.handleShow();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div onClick={e => viewNote(e, \"view\")} className=\"eachNote\">\r\n      <p className=\"noteTitle\">{props.noteTitle}</p>\r\n      <p className=\"noteContent\">\r\n        {\r\n          props.noteContent.split('\\n').map((item, i) => <div key={i} > {item}<br /></div>)\r\n        }\r\n      </p>\r\n      <div>\r\n        <button\r\n          onClick={e => viewNote(e, \"delete\", props.id)}\r\n          className=\"delete\"\r\n        >\r\n          <DeleteIcon />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EachNote;\r\n","import React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nfunction ExpandedNote(props) {\r\n  const {\r\n    show,\r\n    handleClose,\r\n    expandNote: { noteTitle, noteContent }\r\n  } = props;\r\n  const str = String(noteContent);\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{noteTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body id=\"modalBody\"><>{str.split('\\n').map((item, i) => <p key={i}>{item}</p>)}</>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ExpandedNote;\r\n","import React, { useState } from \"react\";\r\nimport EachNote from \"./EachNote\";\r\nimport ExpandedNote from \"./ExpandedNote\";\r\n\r\nfunction Notes(props) {\r\n  const { notes, setNotes } = props;\r\n  const handleShow = () => setShow(true);\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const [expandNote, setExpandNote] = useState({});\r\n  let counter = 0;\r\n  return (\r\n    <div className=\"notes\">\r\n      <ExpandedNote\r\n        show={show}\r\n        handleClose={handleClose}\r\n        expandNote={expandNote}\r\n      />\r\n      {notes.map(note => (\r\n        <EachNote\r\n          key={counter++}\r\n          id={counter}\r\n          setNotes={setNotes}\r\n          handleShow={handleShow}\r\n          setExpandNote={setExpandNote}\r\n          noteTitle={note.titleInput}\r\n          noteContent={note.noteInput}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notes;\r\n","import React, { useState } from \"react\";\r\nimport IForm from \"./IForm\";\r\nimport Notes from \"./Notes\";\r\n\r\nfunction Content() {\r\n  const [notes, setNotes] = useState([{\r\n    titleInput: \"Welcome to Keeper App\",\r\n    noteInput: \"1. Click on any note to expand it. \\n2. Click on delete button to delete this.\\n3. Create new ones using the form provided.\"\r\n  }]);\r\n  const [expandform, setExpandForm] = useState(false);\r\n  return (\r\n    <div className=\"content\">\r\n      <IForm\r\n        expandform={expandform}\r\n        setExpandForm={setExpandForm}\r\n        setNotes={setNotes}\r\n      />\r\n      <Notes setExpandForm={setExpandForm} notes={notes} setNotes={setNotes} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <footer>Abhi's Notes App &copy; 2020</footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Content from \"./Content\";\r\nimport Footer from \"./Footer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Content />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}